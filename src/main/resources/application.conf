include "lucience.conf"

ari.solvers.tableilp {
  port = 9203

  // overrides for entailment parameters in ari/solvers/common/common.conf
  entailment {
    // manual overrides for entailment scores
    entailmentOverridesFile = [{file = "src/main/resources/entailmentOverrides.tsv"}]
    // If you wish to use the remote entailment server for faster startup, uncomment the below.
    // useLocal = false
    // Remote entailment service to use if useLocal is set to false
    // remote.url = "http://localhost:8191/api/entails"
  }

  // main TableIlp solver related parameters; see SolverParams.scala for documentation
  solver {
    useFallbackSolver = false  // if this solver doesn't answer the question, use a fallback solver
    useFallbackSolverCompId = true  // whether to use fallback solver's ID or TableIlp solver's ID
    useRedisCache = true  // use a local Redis service (on port 6739) for entailment score
  }

  // knowledge tables related paramters; see TableParams.scala for documentation
  tables {
    folder = "data/allTablesSplitSkipcolsTitleKey-v3"  // Folder from which to read tables
    // comma-separated list of table IDs (strings) to ignore from the list at:
    // https://docs.google.com/a/allenai.org/spreadsheets/d/1YTPuMOX8EB4YnCrKnQXOV99zZC8QYSkfbCDN3rsfcYM/edit?usp=sharing
    //   -- ignore table 18, whose index is 15, which contains a large dump of WordNet
    ignoreList = "15"  // A comma-separated list of table IDs to ignore
    maxTablesPerQuestion = 4  // max number of tables to consider per question
    // Name of a debugging cheat sheet mapping question to relevant tables
    questionToTablesCache = "data/table-question-information-split.csv"
    useCachedTablesForQuestion = false  // Whether to use the above cheat sheet
    rankThreshold = 0.17333  // If useThreshold = true, minimum table rank for selection
    useRankThreshold = false  // Whether to use the above threshold on rank
    // A CSV file specifying which columns in two tables may align
    allowedTitleAlignmentsFile = "src/main/resources/allowedTitleAlignments.csv"
  }

  // SCIP solver parameters; see ScipParams.scala for documentation
  scip {
    timeLimit = 180d
    logFile = "scip.log"
    messagehdlrQuiet = false
    printVersion = 0
  }

  // ILP model parameters; see IlpParams.scala for documentation
  model {
    alignmentType = "Entailment"
    entailmentScoreOffset = 0.1
    mustChooseAnAnswer = true
    maxTablesToChain = 4
    maxRowsPerTable = 4
    useRelaxedVars = false
    keyColumnsMustMatch = true
    useCachedTitleAlignmentFile = true
  }

  // weights for the ILP model; see IlpWeights.scala for documentation
  weights {
    // minimum thresholds for alignment
    minCellCellAlignment = 0.2
    minCellQConsAlignment = 0.1
    minTitleQConsAlignment = 0.1
    minTitleTitleAlignment = 0.0  // some titles are currently empty, so shouldn't be non-zero
    minCellQChoiceAlignment = 0.2
    minTitleQChoiceAlignment = 0.2

    // importance coefficients
    activeCellObjCoeff = 0d
    activeRowObjCoeff = 0d
    activeColObjCoeff = 1d
    activeTitleObjCoeff = 0.3d
    tableScoreObjCoeff = 1d
    activeQConsObjCoeff = 0.3d
    activeChoiceObjCoeff = 100d

    // penalty to prevent spurious alignments
    tableUsagePenalty = 3d
    rowUsagePenalty = 1d
    interTableAlignmentPenalty = 1d

    // maximum number of alignments
    maxAlignmentsPerQCons = 2
  }
}

akka.loggers = ["akka.event.slf4j.Slf4jLogger"]
