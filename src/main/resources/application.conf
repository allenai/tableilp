include "lucience.conf"

ari.solvers.tableilp {
  port = 9203

  // overrides for entailment parameters in ari/solvers/common/common.conf
  entailment {
    // manual overrides for entailment scores
    entailmentOverridesFile = [{resource = "entailmentOverrides.tsv"}]
    // If you wish to use the remote entailment server for faster startup, uncomment the below.
    // useLocal = false
    // Remote entailment service to use if useLocal is set to false
    // remote.url = "http://localhost:8191/api/entails"
  }

  // main TableIlp solver related parameters; see SolverParams.scala for documentation
  solver {
    useFallbackSolver = false  // if this solver doesn't answer the question, use a fallback solver
    useFallbackSolverCompId = true  // whether to use fallback solver's ID or TableIlp solver's ID
    useRedisCache = false  // use a local Redis service (on port 6739) for entailment score
    fullTablesInIlpSolution = false  // include entire tables, not just active rows, in IlpSolution
  }

  // knowledge tables related paramters; see TableParams.scala for documentation
  tables {
    // Use Tablestore-formatted json file format instead of TableILP's .csv format
    useTablestoreFormat = true

    // Local or Datastore folder from which to read tables; useLocal determines which one is used
    useLocal = false

    localTablestoreFile = "data/metadataILP-v2.json"
    datastoreTablestoreFile = {
      datastore = "private"
      group = "tablestore-dev"
      name = "metadataILP.json"
      version = 3
    }

    localFolder = "data/tables-v4"
    datastoreFolder = {
      datastore = "private"
      group = "org.allenai.aristo.tabledata"
      name = "tables"
      version = 4
    }

    // comma-separated list of table IDs (strings) to ignore from the list at:
    // https://docs.google.com/a/allenai.org/spreadsheets/d/1YTPuMOX8EB4YnCrKnQXOV99zZC8QYSkfbCDN3rsfcYM/edit?usp=sharing
    //   -- ignore table 18, whose index is 15, which contains a large dump of WordNet
    //   -- ignore monarch table 4, whose index is 64 (48 in tablestore) since it is currently
    //      inconsistent (start-time(fall in equatorial region) == "year-round"). Results in
    //      incorrect answer on one NY train question (... rabbit's fur be thickest?)
    ignoreList = "15,64" // these are based on file-order for the .csv files
    ignoreListTablestore = "16,48,70,71,72,73" // Tablestore IDs to skip

    // max number of tables to consider per question; maxTablesToChain is separately controlled
    maxTablesPerQuestion = 5

    // Use a cheat sheet mapping question to relevant tables; for controlled experimentation
    questionToTablesCache = "questionTableCheatsheet.csv"
    useCachedTablesForQuestion = false

    // Use TF-IDF ranking of tables
    rankThreshold = 0.17333  // Minimum rank for the table to be selected for a question
    useRankThreshold = false

    // A CSV file specifying which columns in two tables may align
    allowedColumnAlignmentsFile = "allowedColumnAlignments.csv"
    // The same, but using Tablestore IDs instead of CSV file names
    allowedTablestoreColumnAlignmentsFile = "tablestore-allowedColumnAlignments.csv"
    // A CSV specifying the relations present between the columns in a table
    matchColumnRelationsFile = "kbRelations.csv"
    // Same as the matchColumnRelationsFile with tablestore ids
    matchColumnRelationsTablestoreFile = "tablestore-kbRelations.csv"
    // Regex patterns corresponding to each relation specified in the matchColumnRelationsFile
    relationRepresentationFile = "relationsToPatterns.csv"
  }

  // SCIP solver parameters; see ScipParams.scala for documentation
  scip {
    timeLimit = 180d
    logFile = "scip.log"
    messagehdlrQuiet = true  // set this to false to see SCIP's search log on stdout
    printVersion = 0
  }

  // ILP model parameters; see IlpParams.scala for documentation
  model {
    alignmentType = "Entailment"
    entailmentScoreOffset = 0.1
    mustChooseAnAnswer = true
    maxTablesToChain = 4
    maxRowsPerTable = 4
    useRelaxedVars = false
    qConsCoalignMaxDist = 4
    keyColumnsMustMatch = true
    useCachedTitleAlignmentFile = true
    requireRelationMatch = true
  }

  // weights for the ILP model; see IlpWeights.scala for documentation
  weights {
    // minimum thresholds for alignment
    minCellCellAlignment = 0.2
    minCellQConsAlignment = 0.1
    minTitleQConsAlignment = 0.1
    minTitleTitleAlignment = 0.0  // some titles are currently empty, so shouldn't be non-zero
    minCellQChoiceAlignment = 0.2
    minTitleQChoiceAlignment = 0.2
    minActiveCellAggrAlignment = 0.1
    minActiveTitleAggrAlignment = 0.1

    // importance coefficients
    activeCellObjCoeff = 0d
    activeColObjCoeff = 1d
    activeTitleObjCoeff = 0.3d
    tableScoreObjCoeff = 1d
    activeQConsObjCoeff = 0.3d
    activeChoiceObjCoeff = 100d  // used only when model.mustChooseAnAnswer is false

    // penalty to prevent spurious alignments
    tableUsagePenalty = 3d
    rowUsagePenalty = 1d
    interTableAlignmentPenalty = 1d

    // maximum number of alignments for:
    // Question constituent
    maxAlignmentsPerQCons = 2
    // Table cell
    maxAlignmentsPerCell = 2

  }
}

akka.loggers = ["akka.event.slf4j.Slf4jLogger"]
